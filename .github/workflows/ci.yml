name: Default Meshery Linkerd Workflow

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - '.github/**'
  pull_request:
    branches:
      - master

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:

    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run Linters
      uses: golangci/golangci-lint-action@v3
      with:
        args: --timeout 3m --verbose
  error_code_check:
    name: Error code utility check
    runs-on: ubuntu-22.04
    steps:

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-codegen-

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: |
            errWillHave="level=error"
            GOPROXY=https://proxy.golang.org,direct GOSUMDB=off GO111MODULE=on go install github.com/layer5io/meshkit/cmd/errorutil;
            err=$(/home/runner/go/bin/errorutil -d . update --skip-dirs meshery -i ./helpers -o ./helpers);
            echo "ERR: $err";            
            
            if [[ $err == *"$errWillHave"* ]];
            then
              echo "$err";
              return 1;
            fi
  tests:
    name: Tests
    runs-on: ubuntu-22.04
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Create cluster using KinD
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.11.0"
    - run: |
        export CURRENTCONTEXT="$(kubectl config current-context)"
        echo "current-context:" ${CURRENTCONTEXT}   
        export KUBECONFIG="${HOME}/.kube/config"
        echo "environment-kubeconfig:" ${KUBECONFIG}
        GOPROXY=https://proxy.golang.org,direct GOSUMDB=off GO111MODULE=on go test -v ./...